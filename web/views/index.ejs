<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Özel Oda Yönetimi</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        :root {
            --discord-dark: #36393f;
            --discord-darker: #2f3136;
            --discord-darkest: #202225;
            --discord-accent: #5865f2;
            --discord-accent-hover: #4752c4;
            --discord-text: #dcddde;
            --discord-text-muted: #b9bbbe;
            --success-color: #43b581;
            --warning-color: #faa61a;
            --danger-color: #f04747;
        }

        body {
            background-color: var(--discord-dark);
            color: var(--discord-text);
            font-family: 'Poppins', sans-serif;
            min-height: 100vh;
        }

        .navbar {
            background: var(--discord-darker);
            border-bottom: 1px solid rgba(255,255,255,0.1);
            padding: 1rem 2rem;
        }

        .navbar-brand {
            color: var(--discord-text) !important;
            font-weight: 600;
            font-size: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .navbar-brand i {
            color: var(--discord-accent);
        }

        .server-info {
            background: var(--discord-darker);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            animation: slideIn 0.5s ease-out;
        }

        .server-info h2 {
            color: var(--discord-text);
            font-size: 1.5rem;
            margin-bottom: 1rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .server-info h2 i {
            color: var(--discord-accent);
        }

        .server-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-top: 1rem;
        }

        .stat-card {
            background: var(--discord-darkest);
            padding: 1rem;
            border-radius: 10px;
            text-align: center;
            transition: transform 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
        }

        .stat-card i {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
            color: var(--discord-accent);
        }

        .stat-card h3 {
            font-size: 1.2rem;
            margin: 0;
            color: var(--discord-text);
        }

        .stat-card p {
            font-size: 1.5rem;
            font-weight: 600;
            margin: 0.5rem 0 0;
            color: var(--discord-accent);
        }

        .room-card {
            background: var(--discord-darker);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
            animation: fadeIn 0.5s ease-out;
        }

        .room-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 12px rgba(0,0,0,0.2);
        }

        .room-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 1rem;
        }

        .room-title {
            font-size: 1.2rem;
            font-weight: 600;
            color: var(--discord-text);
            margin: 0;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .room-title i {
            color: var(--discord-accent);
        }

        .room-info {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 1rem;
            margin-bottom: 1rem;
        }

        .info-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
            color: var(--discord-text-muted);
        }

        .info-item i {
            color: var(--discord-accent);
        }

        .btn-delete {
            background: var(--danger-color);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .btn-delete:hover {
            background: #d83c3e;
            transform: translateY(-2px);
        }

        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0,0,0,0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .loading-overlay.active {
            opacity: 1;
            visibility: visible;
        }

        .spinner {
            width: 50px;
            height: 50px;
            border: 3px solid var(--discord-accent);
            border-top-color: transparent;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        .toast-container {
            position: fixed;
            top: 20px;
            right: 20px;
            z-index: 1000;
        }

        .toast {
            background: var(--discord-darker);
            color: var(--discord-text);
            border: none;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
            margin-bottom: 1rem;
            animation: slideInRight 0.3s ease-out;
        }

        .toast-header {
            background: var(--discord-darkest);
            color: var(--discord-text);
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .toast-body {
            padding: 1rem;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(20px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateX(-20px); }
            to { opacity: 1; transform: translateX(0); }
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }

        .modal-content {
            background: var(--discord-darker);
            color: var(--discord-text);
            border: none;
            border-radius: 15px;
        }

        .modal-header {
            border-bottom: 1px solid rgba(255,255,255,0.1);
            padding: 1.5rem;
        }

        .modal-body {
            padding: 1.5rem;
        }

        .modal-footer {
            border-top: 1px solid rgba(255,255,255,0.1);
            padding: 1.5rem;
        }

        .btn-secondary {
            background: var(--discord-darkest);
            border: none;
            color: var(--discord-text);
        }

        .btn-secondary:hover {
            background: var(--discord-dark);
        }

        .btn-danger {
            background: var(--danger-color);
            border: none;
        }

        .btn-danger:hover {
            background: #d83c3e;
        }

        .refresh-btn {
            background: var(--discord-accent);
            color: white;
            border: none;
            padding: 0.5rem 1rem;
            border-radius: 8px;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .refresh-btn:hover {
            background: var(--discord-accent-hover);
            transform: translateY(-2px);
        }

        .refresh-btn i {
            transition: transform 0.3s ease;
        }

        .refresh-btn:hover i {
            transform: rotate(180deg);
        }
    </style>
</head>
<body>
    <nav class="navbar">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">
                <i class="bi bi-discord"></i>
                Özel Oda Yönetimi
            </a>
            <div class="d-flex align-items-center">
                <button class="refresh-btn me-3" onclick="refreshRooms()">
                    <i class="bi bi-arrow-clockwise"></i>
                    Yenile
                </button>
                <button class="btn btn-danger" onclick="logout()">
                    <i class="bi bi-box-arrow-right"></i>
                    Çıkış
                </button>
            </div>
        </div>
    </nav>

    <div class="container py-4">
        <div class="server-info">
            <h2>
                <i class="bi bi-server"></i>
                <span id="serverName">Sunucu Yükleniyor...</span>
            </h2>
            <div class="server-stats">
                <div class="stat-card">
                    <i class="bi bi-people"></i>
                    <h3>Toplam Üye</h3>
                    <p id="totalMembers">-</p>
                </div>
                <div class="stat-card">
                    <i class="bi bi-mic"></i>
                    <h3>Sesli Kanal</h3>
                    <p id="voiceChannels">-</p>
                </div>
                <div class="stat-card">
                    <i class="bi bi-chat"></i>
                    <h3>Metin Kanalı</h3>
                    <p id="textChannels">-</p>
                </div>
                <div class="stat-card">
                    <i class="bi bi-door-open"></i>
                    <h3>Özel Oda</h3>
                    <p id="privateRooms">-</p>
                </div>
            </div>
        </div>

        <div id="roomsContainer">
            <!-- Odalar buraya dinamik olarak eklenecek -->
        </div>
    </div>

    <div class="loading-overlay">
        <div class="spinner"></div>
    </div>

    <div class="toast-container"></div>

    <div class="modal fade" id="deleteModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">
                        <i class="bi bi-exclamation-triangle text-warning"></i>
                        Oda Silme Onayı
                    </h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <p>Bu odayı ve ilgili tüm kanalları silmek istediğinizden emin misiniz?</p>
                    <p class="text-warning">
                        <i class="bi bi-info-circle"></i>
                        Bu işlem geri alınamaz!
                    </p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">
                        <i class="bi bi-trash"></i>
                        Sil
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const socket = io();
        let currentRoomId = null;
        const deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));

        function showToast(message, type = 'success') {
            const toastContainer = document.querySelector('.toast-container');
            const toast = document.createElement('div');
            toast.className = `toast bg-${type === 'success' ? 'success' : 'danger'}`;
            toast.innerHTML = `
                <div class="toast-header">
                    <i class="bi bi-${type === 'success' ? 'check-circle' : 'exclamation-circle'} me-2"></i>
                    <strong class="me-auto">${type === 'success' ? 'Başarılı' : 'Hata'}</strong>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast"></button>
                </div>
                <div class="toast-body">
                    ${message}
                </div>
            `;
            toastContainer.appendChild(toast);
            const bsToast = new bootstrap.Toast(toast);
            bsToast.show();
            toast.addEventListener('hidden.bs.toast', () => toast.remove());
        }

        function showLoading() {
            document.querySelector('.loading-overlay').classList.add('active');
        }

        function hideLoading() {
            document.querySelector('.loading-overlay').classList.remove('active');
        }

        function formatDate(date) {
            return new Date(date).toLocaleString('tr-TR', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        function createRoomCard(room) {
            return `
                <div class="room-card" data-room-id="${room._id}">
                    <div class="room-header">
                        <h3 class="room-title">
                            <i class="bi bi-door-open"></i>
                            ${room.name}
                        </h3>
                        <button class="btn-delete" onclick="confirmDelete('${room._id}')">
                            <i class="bi bi-trash"></i>
                            Sil
                        </button>
                    </div>
                    <div class="room-info">
                        <div class="info-item">
                            <i class="bi bi-person"></i>
                            <span>Oda Sahibi: ${room.ownerName}</span>
                        </div>
                        <div class="info-item">
                            <i class="bi bi-calendar"></i>
                            <span>Oluşturulma: ${formatDate(room.createdAt)}</span>
                        </div>
                        <div class="info-item">
                            <i class="bi bi-mic"></i>
                            <span>Sesli Kanal: ${room.voiceChannelName}</span>
                        </div>
                        <div class="info-item">
                            <i class="bi bi-chat"></i>
                            <span>Metin Kanalı: ${room.textChannelName}</span>
                        </div>
                    </div>
                </div>
            `;
        }

        function updateServerInfo(data) {
            document.getElementById('serverName').textContent = data.name;
            document.getElementById('totalMembers').textContent = data.memberCount;
            document.getElementById('voiceChannels').textContent = data.voiceChannelCount;
            document.getElementById('textChannels').textContent = data.textChannelCount;
            document.getElementById('privateRooms').textContent = data.privateRoomCount;
        }

        function refreshRooms() {
            showLoading();
            socket.emit('getRooms');
        }

        function confirmDelete(roomId) {
            currentRoomId = roomId;
            deleteModal.show();
        }

        document.getElementById('confirmDelete').addEventListener('click', () => {
            if (currentRoomId) {
                showLoading();
                socket.emit('deleteRoom', currentRoomId);
                deleteModal.hide();
            }
        });

        function logout() {
            fetch('/api/logout', {
                method: 'POST'
            }).then(() => {
                window.location.href = '/login';
            });
        }

        socket.on('connect', () => {
            console.log('Socket.IO bağlantısı kuruldu');
            refreshRooms();
        });

        socket.on('rooms', (data) => {
            const container = document.getElementById('roomsContainer');
            container.innerHTML = data.rooms.map(room => createRoomCard(room)).join('');
            updateServerInfo(data.serverInfo);
            hideLoading();
        });

        socket.on('roomDeleted', (data) => {
            showToast('Oda başarıyla silindi');
            refreshRooms();
        });

        socket.on('error', (error) => {
            showToast(error.message, 'error');
            hideLoading();
        });

        refreshRooms();
    </script>
</body>
</html> 